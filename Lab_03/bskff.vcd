$date
	Fri May 15 01:43:13 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module sjkff_tb $end
$var wire 1 ! qn $end
$var wire 1 " q $end
$var reg 1 # clk $end
$var reg 1 $ clrn $end
$var reg 1 % j $end
$var reg 1 & k $end
$var reg 1 ' prn $end
$scope module g $end
$var wire 1 # clk $end
$var wire 1 $ clrn $end
$var wire 1 % j $end
$var wire 1 & k $end
$var wire 1 ( nclk $end
$var wire 1 ' prn $end
$var wire 1 ! qn $end
$var wire 1 " q $end
$var wire 1 ) lna2 $end
$var wire 1 * lna1 $end
$scope module dl $end
$var wire 1 # clk $end
$var wire 1 $ clrn $end
$var wire 1 ' prn $end
$var wire 1 ! qn $end
$var wire 1 " q $end
$var wire 1 ) lna2 $end
$var wire 1 * lna1 $end
$var wire 1 + d $end
$var wire 1 , c $end
$scope module first_three_nand $end
$var wire 1 $ b $end
$var wire 1 # c $end
$var wire 1 - d $end
$var wire 1 , z $end
$var wire 1 * a $end
$upscope $end
$scope module fourth_three_nand $end
$var wire 1 $ b $end
$var wire 1 . d $end
$var wire 1 ! z $end
$var wire 1 + c $end
$var wire 1 " a $end
$upscope $end
$scope module second_three_nand $end
$var wire 1 ' b $end
$var wire 1 # c $end
$var wire 1 / d $end
$var wire 1 + z $end
$var wire 1 ) a $end
$upscope $end
$scope module third_three_nand $end
$var wire 1 , a $end
$var wire 1 ' b $end
$var wire 1 ! c $end
$var wire 1 0 d $end
$var wire 1 " z $end
$upscope $end
$upscope $end
$scope module jkl $end
$var wire 1 $ clrn $end
$var wire 1 % j $end
$var wire 1 & k $end
$var wire 1 ( nclk $end
$var wire 1 ' prn $end
$var wire 1 " q $end
$var wire 1 ! qn $end
$var wire 1 ) lna2 $end
$var wire 1 * lna1 $end
$var wire 1 1 b $end
$var wire 1 2 a $end
$scope module first_four_nand $end
$var wire 1 ! a $end
$var wire 1 % b $end
$var wire 1 ( c $end
$var wire 1 $ d $end
$var wire 1 3 e $end
$var wire 1 4 f $end
$var wire 1 2 z $end
$upscope $end
$scope module first_three_nand $end
$var wire 1 2 a $end
$var wire 1 ' b $end
$var wire 1 5 d $end
$var wire 1 * z $end
$var wire 1 ) c $end
$upscope $end
$scope module second_four_nand $end
$var wire 1 ' a $end
$var wire 1 ( b $end
$var wire 1 & c $end
$var wire 1 " d $end
$var wire 1 6 e $end
$var wire 1 7 f $end
$var wire 1 1 z $end
$upscope $end
$scope module second_three_nand $end
$var wire 1 * a $end
$var wire 1 $ b $end
$var wire 1 1 c $end
$var wire 1 8 d $end
$var wire 1 ) z $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
08
07
06
15
04
03
12
11
10
1/
0.
0-
1,
0+
0*
1)
0(
1'
0&
0%
0$
1#
0"
1!
$end
#1
14
16
1(
1+
0#
1&
1$
#2
04
06
0(
0+
1#
#3
0/
0)
18
1-
1*
05
02
14
16
1(
1+
13
0#
0&
1%
#4
03
0!
15
1.
12
1"
04
06
00
0(
0,
1#
#5
14
16
10
1(
1,
0#
0%
#6
04
06
00
0(
0,
1#
#7
08
0-
0*
1/
1)
01
14
16
10
1(
1,
17
0#
1%
1&
#8
07
0.
11
0"
13
04
06
1!
0(
0+
1#
#9
0/
0)
18
1-
1*
05
02
14
16
1(
1+
0#
#10
03
0!
15
17
1.
12
1"
04
06
00
0(
0,
1#
#11
08
0-
0*
1/
1)
01
14
16
10
1(
1,
0#
#12
07
0.
11
0"
13
04
06
1!
0(
0+
1#
#13
0/
0)
18
1-
1*
05
02
14
16
1(
1+
0#
#14
03
0!
15
17
1.
12
1"
04
06
00
0(
0,
1#
#15
14
16
10
1(
1,
07
0#
0%
0&
#16
04
06
00
0(
0,
1#
#17
14
16
10
1(
1,
0#
