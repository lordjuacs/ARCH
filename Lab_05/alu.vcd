$date
	Sun Jun 14 16:15:47 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module alu_tb $end
$var wire 32 ! result [31:0] $end
$var wire 1 " cero $end
$var reg 32 # a [31:0] $end
$var reg 32 $ b [31:0] $end
$var reg 4 % op [3:0] $end
$scope module g $end
$var wire 32 & a [31:0] $end
$var wire 32 ' b [31:0] $end
$var wire 4 ( op [3:0] $end
$var wire 32 ) result [31:0] $end
$var wire 32 * logicout [31:0] $end
$var wire 1 " cero $end
$var wire 32 + arithout [31:0] $end
$scope module a_block $end
$var wire 32 , a [31:0] $end
$var wire 32 - b [31:0] $end
$var wire 1 . op1 $end
$var wire 1 / op3 $end
$var wire 32 0 arithout [31:0] $end
$var wire 32 1 addout [31:0] $end
$scope module first_adder_substractor $end
$var wire 32 2 a [31:0] $end
$var wire 32 3 b [31:0] $end
$var wire 1 . s $end
$var wire 32 4 y [31:0] $end
$var wire 32 5 con [31:0] $end
$scope module first_adder $end
$var wire 32 6 a [31:0] $end
$var wire 1 . s $end
$var wire 32 7 b [31:0] $end
$var reg 32 8 y [31:0] $end
$upscope $end
$scope module first_mux $end
$var wire 32 9 a [31:0] $end
$var wire 32 : b [31:0] $end
$var wire 1 . s $end
$var wire 32 ; y [31:0] $end
$upscope $end
$upscope $end
$scope module first_stl $end
$var wire 32 < a [31:0] $end
$var wire 1 / s $end
$var wire 32 = y [31:0] $end
$var reg 32 > extend [31:0] $end
$scope module first_mux $end
$var wire 32 ? a [31:0] $end
$var wire 32 @ b [31:0] $end
$var wire 1 / s $end
$var wire 32 A y [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module answer $end
$var wire 32 B a [31:0] $end
$var wire 1 C s $end
$var wire 32 D y [31:0] $end
$var wire 32 E b [31:0] $end
$upscope $end
$scope module l_block $end
$var wire 32 F a [31:0] $end
$var wire 32 G b [31:0] $end
$var wire 4 H op [3:0] $end
$var reg 32 I logicout [31:0] $end
$upscope $end
$scope module z_block $end
$var wire 32 J a [31:0] $end
$var reg 1 " y $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1001 J
bx I
b0 H
b101 G
b100 F
bx E
b1001 D
0C
b1001 B
b1001 A
b0 @
b1001 ?
b0 >
b1001 =
b1001 <
b101 ;
b11111111111111111111111111111010 :
b101 9
b1001 8
b101 7
b100 6
b101 5
b1001 4
b101 3
b100 2
b1001 1
b1001 0
0/
0.
b101 -
b100 ,
b1001 +
bx *
b1001 )
b0 (
b101 '
b100 &
b0 %
b101 $
b100 #
0"
b1001 !
$end
#1
b11111111111111111111111111111111 !
b11111111111111111111111111111111 )
b11111111111111111111111111111111 D
b11111111111111111111111111111111 J
b11111111111111111111111111111111 >
b11111111111111111111111111111111 @
b11111111111111111111111111111111 +
b11111111111111111111111111111111 0
b11111111111111111111111111111111 =
b11111111111111111111111111111111 A
b11111111111111111111111111111111 B
b11111111111111111111111111111111 1
b11111111111111111111111111111111 4
b11111111111111111111111111111111 8
b11111111111111111111111111111111 <
b11111111111111111111111111111111 ?
b11111111111111111111111111111010 5
b11111111111111111111111111111010 7
b11111111111111111111111111111010 ;
1.
b10 %
b10 (
b10 H
#2
b0 >
b0 @
b1001 +
b1001 0
b1001 =
b1001 A
b1001 B
b1001 1
b1001 4
b1001 8
b1001 <
b1001 ?
b101 5
b101 7
b101 ;
b100 !
b100 )
b100 D
b100 J
0.
1C
b100 *
b100 E
b100 I
b100 %
b100 (
b100 H
#3
b101 !
b101 )
b101 D
b101 J
b101 *
b101 E
b101 I
b101 %
b101 (
b101 H
#4
b11111111111111111111111111111111 >
b11111111111111111111111111111111 @
b11111111111111111111111111111111 +
b11111111111111111111111111111111 0
b11111111111111111111111111111111 =
b11111111111111111111111111111111 A
b11111111111111111111111111111111 B
b11111111111111111111111111111111 1
b11111111111111111111111111111111 4
b11111111111111111111111111111111 8
b11111111111111111111111111111111 <
b11111111111111111111111111111111 ?
b11111111111111111111111111111010 5
b11111111111111111111111111111010 7
b11111111111111111111111111111010 ;
b1 !
b1 )
b1 D
b1 J
1.
b1 *
b1 E
b1 I
b110 %
b110 (
b110 H
#5
b11111111111111111111111111111010 !
b11111111111111111111111111111010 )
b11111111111111111111111111111010 D
b11111111111111111111111111111010 J
b11111111111111111111111111111010 *
b11111111111111111111111111111010 E
b11111111111111111111111111111010 I
b111 %
b111 (
b111 H
#6
b11111111111111111111111111111111 !
b11111111111111111111111111111111 )
b11111111111111111111111111111111 D
b11111111111111111111111111111111 J
1/
0C
bx *
bx E
bx I
b1010 %
b1010 (
b1010 H
#7
bx !
bx )
bx D
bx J
1C
b1111 %
b1111 (
b1111 H
#8
b0 >
b0 @
b1001 +
b1001 0
b1001 =
b1001 A
b1001 B
b1001 1
b1001 4
b1001 8
b1001 <
b1001 ?
b1001 !
b1001 )
b1001 D
b1001 J
0.
0/
0C
b100 5
b100 7
b100 ;
b0 %
b0 (
b0 H
b11111111111111111111111111111011 :
b100 $
b100 '
b100 -
b100 3
b100 9
b100 G
b101 #
b101 &
b101 ,
b101 2
b101 6
b101 F
#9
b1 !
b1 )
b1 D
b1 J
b1 +
b1 0
b1 =
b1 A
b1 B
b1 1
b1 4
b1 8
b1 <
b1 ?
b11111111111111111111111111111011 5
b11111111111111111111111111111011 7
b11111111111111111111111111111011 ;
1.
b10 %
b10 (
b10 H
#10
b1001 +
b1001 0
b1001 =
b1001 A
b1001 B
b1001 1
b1001 4
b1001 8
b1001 <
b1001 ?
b100 5
b100 7
b100 ;
b100 !
b100 )
b100 D
b100 J
0.
1C
b100 *
b100 E
b100 I
b100 %
b100 (
b100 H
#11
b101 !
b101 )
b101 D
b101 J
b101 *
b101 E
b101 I
b101 %
b101 (
b101 H
#12
b1 +
b1 0
b1 =
b1 A
b1 B
b1 1
b1 4
b1 8
b1 <
b1 ?
b11111111111111111111111111111011 5
b11111111111111111111111111111011 7
b11111111111111111111111111111011 ;
b1 !
b1 )
b1 D
b1 J
1.
b1 *
b1 E
b1 I
b110 %
b110 (
b110 H
#13
b11111111111111111111111111111010 !
b11111111111111111111111111111010 )
b11111111111111111111111111111010 D
b11111111111111111111111111111010 J
b11111111111111111111111111111010 *
b11111111111111111111111111111010 E
b11111111111111111111111111111010 I
b111 %
b111 (
b111 H
#14
1"
b0 +
b0 0
b0 =
b0 A
b0 B
b0 !
b0 )
b0 D
b0 J
1/
0C
bx *
bx E
bx I
b1010 %
b1010 (
b1010 H
#15
0"
bx !
bx )
bx D
bx J
1C
b1111 %
b1111 (
b1111 H
#16
