$date
	Sun Jul 12 22:59:14 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module flopenr $end
$var wire 1 ! clk $end
$var wire 8 " d [7:0] $end
$var wire 1 # en $end
$var wire 1 $ reset $end
$var reg 8 % q [7:0] $end
$upscope $end
$scope module testbench $end
$var wire 32 & writedata [31:0] $end
$var wire 1 ' memwrite $end
$var wire 32 ( dataadr [31:0] $end
$var reg 1 ) clk $end
$var reg 1 * reset $end
$scope module dut $end
$var wire 1 ) clk $end
$var wire 1 * reset $end
$var wire 32 + writedata [31:0] $end
$var wire 32 , readdata [31:0] $end
$var wire 32 - pc [31:0] $end
$var wire 1 ' memwrite $end
$var wire 32 . instr [31:0] $end
$var wire 32 / dataadr [31:0] $end
$scope module dmem $end
$var wire 1 ) clk $end
$var wire 32 0 rd [31:0] $end
$var wire 1 ' we $end
$var wire 32 1 wd [31:0] $end
$var wire 32 2 a [31:0] $end
$upscope $end
$scope module imem $end
$var wire 6 3 a [5:0] $end
$var wire 32 4 rd [31:0] $end
$upscope $end
$scope module mips $end
$var wire 1 ) clk $end
$var wire 32 5 instr [31:0] $end
$var wire 32 6 readdata [31:0] $end
$var wire 1 * reset $end
$var wire 1 7 zero $end
$var wire 32 8 writedata [31:0] $end
$var wire 1 9 regwrite $end
$var wire 1 : regdst $end
$var wire 1 ; pcsrc $end
$var wire 32 < pc [31:0] $end
$var wire 1 ' memwrite $end
$var wire 1 = memtoreg $end
$var wire 1 > jump $end
$var wire 1 ? bne $end
$var wire 1 @ alusrc $end
$var wire 32 A aluout [31:0] $end
$var wire 3 B alucontrol [2:0] $end
$scope module c $end
$var wire 6 C funct [5:0] $end
$var wire 6 D op [5:0] $end
$var wire 1 ; pcsrc $end
$var wire 1 7 zero $end
$var wire 1 9 regwrite $end
$var wire 1 : regdst $end
$var wire 1 ' memwrite $end
$var wire 1 = memtoreg $end
$var wire 1 > jump $end
$var wire 1 E branch $end
$var wire 1 ? bne $end
$var wire 1 @ alusrc $end
$var wire 2 F aluop [1:0] $end
$var wire 3 G alucontrol [2:0] $end
$scope module ad $end
$var wire 6 H funct [5:0] $end
$var wire 2 I aluop [1:0] $end
$var reg 3 J alucontrol [2:0] $end
$upscope $end
$scope module md $end
$var wire 6 K op [5:0] $end
$var wire 1 9 regwrite $end
$var wire 1 : regdst $end
$var wire 1 ' memwrite $end
$var wire 1 = memtoreg $end
$var wire 1 > jump $end
$var wire 1 E branch $end
$var wire 1 ? bne $end
$var wire 1 @ alusrc $end
$var wire 2 L aluop [1:0] $end
$var reg 10 M controls [9:0] $end
$upscope $end
$upscope $end
$scope module dp $end
$var wire 3 N alucontrol [2:0] $end
$var wire 1 @ alusrc $end
$var wire 1 ? bne $end
$var wire 1 ) clk $end
$var wire 32 O instr [31:0] $end
$var wire 1 > jump $end
$var wire 1 = memtoreg $end
$var wire 1 ; pcsrc $end
$var wire 32 P readdata [31:0] $end
$var wire 1 : regdst $end
$var wire 1 9 regwrite $end
$var wire 1 * reset $end
$var wire 1 7 zero $end
$var wire 5 Q writereg [4:0] $end
$var wire 32 R writedata [31:0] $end
$var wire 32 S srcb [31:0] $end
$var wire 32 T srca [31:0] $end
$var wire 32 U signimmsh [31:0] $end
$var wire 32 V signimm [31:0] $end
$var wire 32 W result [31:0] $end
$var wire 32 X pcplus4 [31:0] $end
$var wire 32 Y pcnextbr [31:0] $end
$var wire 32 Z pcnext [31:0] $end
$var wire 32 [ pcbranch [31:0] $end
$var wire 32 \ pc [31:0] $end
$var wire 32 ] aluout [31:0] $end
$scope module alu $end
$var wire 3 ^ op [2:0] $end
$var wire 32 _ result [31:0] $end
$var wire 32 ` logicout [31:0] $end
$var wire 1 7 cero $end
$var wire 32 a b [31:0] $end
$var wire 32 b arithout [31:0] $end
$var wire 32 c a [31:0] $end
$scope module a_block $end
$var wire 3 d op [2:0] $end
$var wire 32 e b [31:0] $end
$var wire 32 f arithout [31:0] $end
$var wire 32 g addout [31:0] $end
$var wire 32 h a [31:0] $end
$scope module first_adder_substractor $end
$var wire 1 i s $end
$var wire 32 j y [31:0] $end
$var wire 32 k con [31:0] $end
$var wire 32 l b [31:0] $end
$var wire 32 m a [31:0] $end
$scope module first_adder $end
$var wire 1 i s $end
$var wire 32 n b [31:0] $end
$var wire 32 o a [31:0] $end
$var reg 32 p y [31:0] $end
$upscope $end
$scope module first_mux $end
$var wire 32 q b [31:0] $end
$var wire 1 i s $end
$var wire 32 r y [31:0] $end
$var wire 32 s a [31:0] $end
$upscope $end
$upscope $end
$scope module first_stl $end
$var wire 32 t a [31:0] $end
$var wire 1 u s $end
$var wire 32 v y [31:0] $end
$var reg 32 w extend [31:0] $end
$scope module first_mux $end
$var wire 32 x a [31:0] $end
$var wire 32 y b [31:0] $end
$var wire 1 u s $end
$var wire 32 z y [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module answer $end
$var wire 32 { b [31:0] $end
$var wire 1 | s $end
$var wire 32 } y [31:0] $end
$var wire 32 ~ a [31:0] $end
$upscope $end
$scope module l_block $end
$var wire 3 !" op [2:0] $end
$var wire 32 "" b [31:0] $end
$var wire 32 #" a [31:0] $end
$var reg 32 $" logicout [31:0] $end
$upscope $end
$scope module z_block $end
$var wire 32 %" a [31:0] $end
$var reg 1 7 y $end
$upscope $end
$upscope $end
$scope module immsh $end
$var wire 32 &" y [31:0] $end
$var wire 32 '" a [31:0] $end
$upscope $end
$scope module pcadd1 $end
$var wire 32 (" b [31:0] $end
$var wire 32 )" y [31:0] $end
$var wire 32 *" a [31:0] $end
$upscope $end
$scope module pcadd2 $end
$var wire 32 +" a [31:0] $end
$var wire 32 ," b [31:0] $end
$var wire 32 -" y [31:0] $end
$upscope $end
$scope module pcbrmux $end
$var wire 32 ." d0 [31:0] $end
$var wire 32 /" d1 [31:0] $end
$var wire 1 ; s $end
$var wire 32 0" y [31:0] $end
$upscope $end
$scope module pcmux $end
$var wire 32 1" d0 [31:0] $end
$var wire 32 2" d1 [31:0] $end
$var wire 1 > s $end
$var wire 32 3" y [31:0] $end
$upscope $end
$scope module pcreg $end
$var wire 1 ) clk $end
$var wire 32 4" d [31:0] $end
$var wire 1 * reset $end
$var reg 32 5" q [31:0] $end
$upscope $end
$scope module resmux $end
$var wire 32 6" d0 [31:0] $end
$var wire 32 7" d1 [31:0] $end
$var wire 1 = s $end
$var wire 32 8" y [31:0] $end
$upscope $end
$scope module rf $end
$var wire 1 ) clk $end
$var wire 5 9" ra1 [4:0] $end
$var wire 5 :" ra2 [4:0] $end
$var wire 32 ;" wd3 [31:0] $end
$var wire 1 9 we3 $end
$var wire 5 <" wa3 [4:0] $end
$var wire 32 =" rd2 [31:0] $end
$var wire 32 >" rd1 [31:0] $end
$upscope $end
$scope module se $end
$var wire 16 ?" a [15:0] $end
$var wire 32 @" y [31:0] $end
$upscope $end
$scope module srcbmux $end
$var wire 32 A" d0 [31:0] $end
$var wire 32 B" d1 [31:0] $end
$var wire 1 @ s $end
$var wire 32 C" y [31:0] $end
$upscope $end
$scope module wrmux $end
$var wire 5 D" d0 [4:0] $end
$var wire 5 E" d1 [4:0] $end
$var wire 1 : s $end
$var wire 5 F" y [4:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1000 F"
b10000 E"
b1000 D"
b11111111111111111000000000000000 C"
b11111111111111111000000000000000 B"
bx A"
b11111111111111111000000000000000 @"
b1000000000000000 ?"
b0 >"
bx ="
b1000 <"
b11111111111111111000000000000000 ;"
b1000 :"
b0 9"
b11111111111111111000000000000000 8"
bx 7"
b11111111111111111000000000000000 6"
b0 5"
b100 4"
b100 3"
b1000100000000000000000 2"
b100 1"
b100 0"
b11111111111111100000000000000100 /"
b100 ."
b11111111111111100000000000000100 -"
b11111111111111100000000000000000 ,"
b100 +"
b0 *"
b100 )"
b100 ("
b11111111111111111000000000000000 '"
b11111111111111100000000000000000 &"
b11111111111111111000000000000000 %"
b11111111111111111000000000000000 $"
b0 #"
b11111111111111111000000000000000 ""
b1 !"
b11111111111111111000000000000000 ~
b11111111111111111000000000000000 }
0|
b1 {
b1 z
b1 y
b11111111111111111000000000000000 x
b1 w
b1 v
1u
b11111111111111111000000000000000 t
b11111111111111111000000000000000 s
b11111111111111111000000000000000 r
b111111111111111 q
b11111111111111111000000000000000 p
b0 o
b11111111111111111000000000000000 n
b0 m
b11111111111111111000000000000000 l
b11111111111111111000000000000000 k
b11111111111111111000000000000000 j
0i
b0 h
b11111111111111111000000000000000 g
b1 f
b11111111111111111000000000000000 e
b1 d
b0 c
b1 b
b11111111111111111000000000000000 a
b11111111111111111000000000000000 `
b11111111111111111000000000000000 _
b1 ^
b11111111111111111000000000000000 ]
b0 \
b11111111111111100000000000000100 [
b100 Z
b100 Y
b100 X
b11111111111111111000000000000000 W
b11111111111111111000000000000000 V
b11111111111111100000000000000000 U
b0 T
b11111111111111111000000000000000 S
bx R
b1000 Q
bx P
b110100000010001000000000000000 O
b1 N
b1010000110 M
b11 L
b1101 K
b1 J
b11 I
b0 H
b1 G
b11 F
0E
b1101 D
b0 C
b1 B
b11111111111111111000000000000000 A
1@
0?
0>
0=
b0 <
0;
0:
19
bx 8
07
bx 6
b110100000010001000000000000000 5
b110100000010001000000000000000 4
b0 3
b11111111111111111000000000000000 2
bx 1
bx 0
b11111111111111111000000000000000 /
b110100000010001000000000000000 .
b0 -
bx ,
bx +
1*
1)
b11111111111111111000000000000000 (
0'
bx &
bx %
z$
z#
bz "
z!
$end
#5
0)
#10
b11111111111111111000000000000000 &
b11111111111111111000000000000000 +
b11111111111111111000000000000000 1
b11111111111111111000000000000000 8
b11111111111111111000000000000000 R
b11111111111111111000000000000000 ="
b11111111111111111000000000000000 A"
1)
#15
0)
#20
1)
#22
0*
#25
0)
#30
b11111111111111111000000000000000 W
b11111111111111111000000000000000 8"
b11111111111111111000000000000000 ;"
b11111111111111111000000000000000 b
b11111111111111111000000000000000 f
b11111111111111111000000000000000 v
b11111111111111111000000000000000 z
b11111111111111111000000000000000 {
b11111111111111111000000000000000 (
b11111111111111111000000000000000 /
b11111111111111111000000000000000 2
b11111111111111111000000000000000 A
b11111111111111111000000000000000 ]
b11111111111111111000000000000000 _
b11111111111111111000000000000000 }
b11111111111111111000000000000000 %"
b11111111111111111000000000000000 6"
1|
0u
bx `
bx ~
bx $"
b10 B
b10 G
b10 J
b10 N
b10 ^
b10 d
b10 !"
b0 F
b0 I
b0 L
b1010000000 M
bx &
bx +
bx 1
bx 8
bx R
bx ="
bx A"
b1001 Q
b1001 <"
b1001 F"
b1000 Z
b1000 3"
b1000 4"
b1000 D
b1000 K
b1001100000000000000000 2"
b1001 :"
b1001 D"
b1000 Y
b1000 0"
b1000 1"
b100000000010011000000000000000 .
b100000000010011000000000000000 4
b100000000010011000000000000000 5
b100000000010011000000000000000 O
b1 3
b11111111111111100000000000001000 [
b11111111111111100000000000001000 -"
b11111111111111100000000000001000 /"
b1000 X
b1000 )"
b1000 +"
b1000 ."
b100 -
b100 <
b100 \
b100 *"
b100 5"
1)
#35
0)
#40
0|
1u
b11111111111111111000000000000001 `
b11111111111111111000000000000001 ~
b11111111111111111000000000000001 $"
b1 B
b1 G
b1 J
b1 N
b1 ^
b1 d
b1 !"
b11111111111111111000000000000001 W
b11111111111111111000000000000001 8"
b11111111111111111000000000000001 ;"
b11111111111111111000000000000001 (
b11111111111111111000000000000001 /
b11111111111111111000000000000001 2
b11111111111111111000000000000001 A
b11111111111111111000000000000001 ]
b11111111111111111000000000000001 _
b11111111111111111000000000000001 }
b11111111111111111000000000000001 %"
b11111111111111111000000000000001 6"
b1 b
b1 f
b1 v
b1 z
b1 {
b11 F
b11 I
b11 L
b11111111111111110000000000000001 g
b11111111111111110000000000000001 j
b11111111111111110000000000000001 p
b11111111111111110000000000000001 t
b11111111111111110000000000000001 x
b1010000110 M
b11111111111111111000000000000001 k
b11111111111111111000000000000001 n
b11111111111111111000000000000001 r
b111111111111110 q
b11111111111111111000000000000000 T
b11111111111111111000000000000000 c
b11111111111111111000000000000000 h
b11111111111111111000000000000000 m
b11111111111111111000000000000000 o
b11111111111111111000000000000000 #"
b11111111111111111000000000000000 >"
b1010 Q
b1010 <"
b1010 F"
b11111111111111111000000000000001 S
b11111111111111111000000000000001 a
b11111111111111111000000000000001 e
b11111111111111111000000000000001 l
b11111111111111111000000000000001 s
b11111111111111111000000000000001 ""
b11111111111111111000000000000001 C"
b11111111111111100000000000000100 U
b11111111111111100000000000000100 &"
b11111111111111100000000000000100 ,"
b1100 Z
b1100 3"
b1100 4"
b1101 D
b1101 K
b1 C
b1 H
b100001010100000000000000100 2"
b1000 9"
b1010 :"
b1010 D"
b11111111111111111000000000000001 V
b11111111111111111000000000000001 '"
b11111111111111111000000000000001 @"
b11111111111111111000000000000001 B"
b1000000000000001 ?"
bx &
bx +
bx 1
bx 8
bx R
bx ="
bx A"
b1100 Y
b1100 0"
b1100 1"
b110101000010101000000000000001 .
b110101000010101000000000000001 4
b110101000010101000000000000001 5
b110101000010101000000000000001 O
b10 3
b11111111111111100000000000010000 [
b11111111111111100000000000010000 -"
b11111111111111100000000000010000 /"
b1100 X
b1100 )"
b1100 +"
b1100 ."
b1000 -
b1000 <
b1000 \
b1000 *"
b1000 5"
1)
#45
0)
#50
1;
17
b0 w
b0 y
b0 b
b0 f
b0 v
b0 z
b0 {
1|
1i
0u
b110 B
b110 G
b110 J
b110 N
b110 ^
b110 d
b110 !"
09
0@
1E
b1 F
b1 I
b1 L
b0 g
b0 j
b0 p
b0 t
b0 x
b1000010 M
b0 W
b0 8"
b0 ;"
b0 (
b0 /
b0 2
b0 A
b0 ]
b0 _
b0 }
b0 %"
b0 6"
b111111111111111 k
b111111111111111 n
b111111111111111 r
b111111111111111 q
bx `
bx ~
bx $"
b1001 Q
b1001 <"
b1001 F"
b11111111111111111000000000000000 S
b11111111111111111000000000000000 a
b11111111111111111000000000000000 e
b11111111111111111000000000000000 l
b11111111111111111000000000000000 s
b11111111111111111000000000000000 ""
b11111111111111111000000000000000 C"
b10100 U
b10100 &"
b10100 ,"
b100100 Z
b100100 3"
b100100 4"
b100 D
b100 K
b101 C
b101 H
b100001001000000000000010100 2"
b1001 :"
b1001 D"
b0 E"
b101 V
b101 '"
b101 @"
b101 B"
b101 ?"
b11111111111111111000000000000000 &
b11111111111111111000000000000000 +
b11111111111111111000000000000000 1
b11111111111111111000000000000000 8
b11111111111111111000000000000000 R
b11111111111111111000000000000000 ="
b11111111111111111000000000000000 A"
b100100 Y
b100100 0"
b100100 1"
b10001000010010000000000000101 .
b10001000010010000000000000101 4
b10001000010010000000000000101 5
b10001000010010000000000000101 O
b11 3
b100100 [
b100100 -"
b100100 /"
b10000 X
b10000 )"
b10000 +"
b10000 ."
b1100 -
b1100 <
b1100 \
b1100 *"
b1100 5"
1)
#55
0)
#60
0i
b10 B
b10 G
b10 J
b10 N
b10 ^
b10 d
b10 !"
bx W
bx 8"
bx ;"
07
0;
bx (
bx /
bx 2
bx A
bx ]
bx _
bx }
bx %"
bx 6"
b0x w
b0x y
bx b
bx f
bx v
bx z
bx {
19
1:
0E
b10 F
b10 I
b10 L
bx g
bx j
bx p
bx t
bx x
b1100000100 M
b11111111111111111000000000000001 k
b11111111111111111000000000000001 n
b11111111111111111000000000000001 r
b111111111111110 q
b11111111111111111000000000000001 S
b11111111111111111000000000000001 a
b11111111111111111000000000000001 e
b11111111111111111000000000000001 l
b11111111111111111000000000000001 s
b11111111111111111000000000000001 ""
b11111111111111111000000000000001 C"
bx T
bx c
bx h
bx m
bx o
bx #"
bx >"
b11111111111111111000000000000001 &
b11111111111111111000000000000001 +
b11111111111111111000000000000001 1
b11111111111111111000000000000001 8
b11111111111111111000000000000001 R
b11111111111111111000000000000001 ="
b11111111111111111000000000000001 A"
b1011 Q
b1011 <"
b1011 F"
b10110000010000000 U
b10110000010000000 &"
b10110000010000000 ,"
b101000 Z
b101000 3"
b101000 4"
b0 D
b0 K
b100000 C
b100000 H
b101101010010110000010000000 2"
b1011 9"
b1010 :"
b1010 D"
b1011 E"
b101100000100000 V
b101100000100000 '"
b101100000100000 @"
b101100000100000 B"
b101100000100000 ?"
b101000 Y
b101000 0"
b101000 1"
b1011010100101100000100000 .
b1011010100101100000100000 4
b1011010100101100000100000 5
b1011010100101100000100000 O
b1001 3
b10110000010101000 [
b10110000010101000 -"
b10110000010101000 /"
b101000 X
b101000 )"
b101000 +"
b101000 ."
b100100 -
b100100 <
b100100 \
b100100 *"
b100100 5"
1)
#65
0)
#70
b1 W
b1 8"
b1 ;"
b1 (
b1 /
b1 2
b1 A
b1 ]
b1 _
b1 }
b1 %"
b1 6"
b0 w
b0 y
b1 b
b1 f
b1 v
b1 z
b1 {
1i
b1 g
b1 j
b1 p
b1 t
b1 x
b110 B
b110 G
b110 J
b110 N
b110 ^
b110 d
b110 !"
b111111111111111 k
b111111111111111 n
b111111111111111 r
b111111111111111 q
b11111111111111111000000000000000 S
b11111111111111111000000000000000 a
b11111111111111111000000000000000 e
b11111111111111111000000000000000 l
b11111111111111111000000000000000 s
b11111111111111111000000000000000 ""
b11111111111111111000000000000000 C"
b11111111111111111000000000000001 T
b11111111111111111000000000000001 c
b11111111111111111000000000000001 h
b11111111111111111000000000000001 m
b11111111111111111000000000000001 o
b11111111111111111000000000000001 #"
b11111111111111111000000000000001 >"
b11111111111111111000000000000000 &
b11111111111111111000000000000000 +
b11111111111111111000000000000000 1
b11111111111111111000000000000000 8
b11111111111111111000000000000000 R
b11111111111111111000000000000000 ="
b11111111111111111000000000000000 A"
b1000 Q
b1000 <"
b1000 F"
b10000000010001000 U
b10000000010001000 &"
b10000000010001000 ,"
b101100 Z
b101100 3"
b101100 4"
b100010 C
b100010 H
b101001000010000000010001000 2"
b1010 9"
b1000 :"
b1000 D"
b1000 E"
b100000000100010 V
b100000000100010 '"
b100000000100010 @"
b100000000100010 B"
b100000000100010 ?"
b101100 Y
b101100 0"
b101100 1"
b1010010000100000000100010 .
b1010010000100000000100010 4
b1010010000100000000100010 5
b1010010000100000000100010 O
b1010 3
b10000000010110100 [
b10000000010110100 -"
b10000000010110100 /"
b101100 X
b101100 )"
b101100 +"
b101100 ."
b101000 -
b101000 <
b101000 \
b101000 *"
b101000 5"
1)
#75
0)
#80
bx W
bx 8"
bx ;"
bx (
bx /
bx 2
bx A
bx ]
bx _
bx }
bx %"
bx 6"
b0x w
b0x y
bx b
bx f
bx v
bx z
bx {
09
0:
1@
1'
b0 F
b0 I
b0 L
1|
0i
0u
bx g
bx j
bx p
bx t
bx x
b10100000 M
b10 B
b10 G
b10 J
b10 N
b10 ^
b10 d
b10 !"
b1010010 k
b1010010 n
b1010010 r
b11111111111111111111111110101101 q
bx T
bx c
bx h
bx m
bx o
bx #"
bx >"
b1000 Q
b1000 <"
b1000 F"
b101001000 U
b101001000 &"
b101001000 ,"
b1010010 S
b1010010 a
b1010010 e
b1010010 l
b1010010 s
b1010010 ""
b1010010 C"
b110000 Z
b110000 3"
b110000 4"
b101011 D
b101011 K
b10010 C
b10010 H
b101101000000000000101001000 2"
b1011 9"
b0 E"
b1010010 V
b1010010 '"
b1010010 @"
b1010010 B"
b1010010 ?"
b1 &
b1 +
b1 1
b1 8
b1 R
b1 ="
b1 A"
b110000 Y
b110000 0"
b110000 1"
b10101101011010000000000001010010 .
b10101101011010000000000001010010 4
b10101101011010000000000001010010 5
b10101101011010000000000001010010 O
b1011 3
b101111000 [
b101111000 -"
b101111000 /"
b110000 X
b110000 )"
b110000 +"
b110000 ."
b101100 -
b101100 <
b101100 \
b101100 *"
b101100 5"
1)
#85
